import{J as o,K as l}from"./index-Cx2El54a.js";const n={getNotes(t={}){return o.get("notes/",{params:t})},getNote(t){return o.get(`notes/${t}/`)},createNote(t){return o.post("notes/",t)},updateNote(t,s){return o.put(`notes/${t}/`,s)},deleteNote(t){return o.delete(`notes/${t}/`)},uploadImage(t,s){const e=new FormData;return e.append("image",s),o.post(`notes/${t}/upload_image/`,e,{headers:{"Content-Type":"multipart/form-data"}})},getImages(t){return o.get(`notes/${t}/images/`)}},u=l("notes",{state:()=>({notes:[],currentNote:null,loading:!1,error:null,pagination:{count:0,next:null,previous:null},filters:{section:null,tags:[],searchQuery:"",sort:"-updated_at"}}),getters:{getNoteById:t=>s=>t.notes.find(e=>e.id===s)},actions:{async fetchNotes(t=1,s={}){var e;this.loading=!0,this.error=null;try{const r={page:t,ordering:this.filters.sort,search:this.filters.searchQuery||void 0,...s};this.filters.section&&!r.section&&(r.section=this.filters.section),this.filters.tags.length>0&&!r.tags&&(r.tags=this.filters.tags.join(",")),console.log("Fetching notes with params:",r);const a=await n.getNotes(r);return console.log("Note response:",a.data),Array.isArray(a.data)?(this.notes=a.data,this.pagination={count:a.data.length,next:null,previous:null},{results:a.data,count:a.data.length}):a.data.results?(this.notes=a.data.results,this.pagination={count:a.data.count,next:a.data.next,previous:a.data.previous},a.data):(console.warn("Unexpected API response structure:",a.data),this.notes=[],this.pagination={count:0,next:null,previous:null},{results:[],count:0})}catch(r){throw console.error("Failed to load notes:",r),this.error=((e=r.response)==null?void 0:e.data)||{detail:"Failed to load notes"},r}finally{this.loading=!1}},async fetchNoteById(t){var s;this.loading=!0,this.error=null;try{const e=await n.getNote(t);return this.currentNote=e.data,e.data}catch(e){throw this.error=((s=e.response)==null?void 0:s.data)||{detail:"Failed to load note"},e}finally{this.loading=!1}},async createNote(t){var s;this.loading=!0,this.error=null;try{const e=await n.createNote(t);return this.notes.unshift(e.data),e.data}catch(e){throw this.error=((s=e.response)==null?void 0:s.data)||{detail:"Failed to create note"},e}finally{this.loading=!1}},async updateNote(t,s){var e;this.loading=!0,this.error=null;try{const r=await n.updateNote(t,s),a=this.notes.findIndex(i=>i.id===t);return a!==-1&&(this.notes[a]=r.data),this.currentNote&&this.currentNote.id===t&&(this.currentNote=r.data),r.data}catch(r){throw this.error=((e=r.response)==null?void 0:e.data)||{detail:"Failed to update note"},r}finally{this.loading=!1}},async deleteNote(t){var s;this.loading=!0,this.error=null;try{await n.deleteNote(t),this.notes=this.notes.filter(e=>e.id!==t),this.currentNote&&this.currentNote.id===t&&(this.currentNote=null)}catch(e){throw this.error=((s=e.response)==null?void 0:s.data)||{detail:"Failed to delete note"},e}finally{this.loading=!1}},async uploadImage(t,s){var e;try{return(await n.uploadImage(t,s)).data}catch(r){throw this.error=((e=r.response)==null?void 0:e.data)||{detail:"Failed to upload image"},r}},setFilters(t){this.filters={...this.filters,...t}},resetFilters(){this.filters={section:null,tags:[],searchQuery:"",sort:"-updated_at"}}}});export{u};
