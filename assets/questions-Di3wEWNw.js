import{J as l,K as g}from"./index-C4Um7Kjq.js";const n={getQuestions(t={}){return l.get("questions/",{params:t})},getQuestion(t){return l.get(`questions/${t}/`)},createQuestion(t){return l.post("questions/",t)},updateQuestion(t,r){return l.put(`questions/${t}/`,r)},deleteQuestion(t){return l.delete(`questions/${t}/`)},getMultipleChoiceQuestions(t={}){return l.get("multiple-choice/",{params:t})},getMultipleChoiceQuestion(t){return l.get(`multiple-choice/${t}/`)},createMultipleChoiceQuestion(t){return l.post("multiple-choice/",t)},updateMultipleChoiceQuestion(t,r){return l.put(`multiple-choice/${t}/`,r)},deleteMultipleChoiceQuestion(t){return l.delete(`multiple-choice/${t}/`)}},y=g("questions",{state:()=>({questions:[],currentQuestion:null,loading:!1,error:null,pagination:{count:0,next:null,previous:null},filters:{section:null,tags:[],searchQuery:"",sort:"-updated_at",type:null}}),getters:{getQuestionById:t=>r=>t.questions.find(o=>o.id===r)},actions:{async fetchQuestions(t=1,r={}){var o;this.loading=!0,this.error=null;try{const i={page:t,ordering:this.filters.sort,search:this.filters.searchQuery||void 0,...r};this.filters.section&&(i.section=this.filters.section),this.filters.tag&&(i.tags=this.filters.tag),console.log("Fetching with params:",i,"Filter type:",this.filters.type);let e,u=[];if(!this.filters.type||this.filters.type==="all"){const[s,a]=await Promise.all([n.getQuestions(i),n.getMultipleChoiceQuestions(i)]);console.log("Regular response:",s),console.log("MC response:",a);let c=[];s.data&&(Array.isArray(s.data)?c=s.data:s.data.results&&(c=s.data.results));let d=[];a.data&&(Array.isArray(a.data)?d=a.data:a.data.results&&(d=a.data.results)),u=[...c.map(p=>({...p,type:"question"})),...d.map(p=>({...p,type:"multiple_choice"}))];const h={count:u.length,next:null,previous:null},f=s.data.count!==void 0?{count:(s.data.count||0)+(a.data.count||0),next:s.data.next||a.data.next,previous:s.data.previous||a.data.previous}:h;return this.questions=u,this.pagination=f,{results:u,count:f.count}}else this.filters.type==="multiple_choice"?e=await n.getMultipleChoiceQuestions(i):e=await n.getQuestions(i);if(e){let s=[],a=0,c=null,d=null;return e.data&&(Array.isArray(e.data)?(s=e.data,a=s.length):e.data.results&&(s=e.data.results,a=e.data.count||s.length,c=e.data.next,d=e.data.previous)),s=s.map(h=>({...h,type:this.filters.type||"question"})),this.questions=s,this.pagination={count:a,next:c,previous:d},{results:s,count:a}}}catch(i){throw console.error("Failed to load questions:",i),this.error=((o=i.response)==null?void 0:o.data)||{detail:"Failed to load questions"},i}finally{this.loading=!1}},async fetchQuestionById(t,r="question"){var o;this.loading=!0,this.error=null;try{let i;r==="multiple_choice"?i=await n.getMultipleChoiceQuestion(t):i=await n.getQuestion(t);const e=i.data;return console.log(`Raw question data from API (${r}):`,e),e.section_id&&!e.section&&(e.section=e.section_id),r==="multiple_choice"&&(e.data||(e.data={}),e.choices&&!e.data.choices&&(e.data.choices=e.choices),e.correct_answer&&!e.data.correct_answer&&(e.data.correct_answer=e.correct_answer),!e.choices&&e.data.choices&&(e.choices=e.data.choices),!e.correct_answer&&e.data.correct_answer&&(e.correct_answer=e.data.correct_answer)),this.currentQuestion=e,e}catch(i){throw console.error("Error in fetchQuestionById:",i),this.error=((o=i.response)==null?void 0:o.data)||{detail:"Failed to load question"},i}finally{this.loading=!1}},async createQuestion(t,r="question"){var o;this.loading=!0,this.error=null;try{let i;return r==="multiple_choice"?i=await n.createMultipleChoiceQuestion(t):i=await n.createQuestion(t),this.questions.unshift(i.data),i.data}catch(i){throw this.error=((o=i.response)==null?void 0:o.data)||{detail:"Failed to create question"},i}finally{this.loading=!1}},async updateQuestion(t,r,o="question"){var i;this.loading=!0,this.error=null;try{let e;o==="multiple_choice"?e=await n.updateMultipleChoiceQuestion(t,r):e=await n.updateQuestion(t,r);const u=this.questions.findIndex(s=>s.id===t);return u!==-1&&(this.questions[u]=e.data),this.currentQuestion&&this.currentQuestion.id===t&&(this.currentQuestion=e.data),e.data}catch(e){throw this.error=((i=e.response)==null?void 0:i.data)||{detail:"Failed to update question"},e}finally{this.loading=!1}},async deleteQuestion(t,r="question"){var o;this.loading=!0,this.error=null;try{r==="multiple_choice"?await n.deleteMultipleChoiceQuestion(t):await n.deleteQuestion(t),this.questions=this.questions.filter(i=>i.id!==t),this.currentQuestion&&this.currentQuestion.id===t&&(this.currentQuestion=null)}catch(i){throw this.error=((o=i.response)==null?void 0:o.data)||{detail:"Failed to delete question"},i}finally{this.loading=!1}},setFilters(t){this.filters={...this.filters,...t}},resetFilters(){this.filters={section:null,tags:[],searchQuery:"",sort:"-updated_at",type:null}}}});export{n as q,y as u};
