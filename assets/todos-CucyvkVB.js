import{K as d}from"./index-C4Um7Kjq.js";import{t as s}from"./todos-C-_Eh4lT.js";const c=d("todos",{state:()=>({todos:[],currentTodo:null,loading:!1,error:null,pagination:{count:0,next:null,previous:null},filters:{section:null,tags:[],searchQuery:"",completed:null,sort:"-created_at"}}),getters:{getTodoById:o=>e=>o.todos.find(t=>t.id===e),completedTodos:o=>o.todos.filter(e=>e.is_completed),incompleteTodos:o=>o.todos.filter(e=>!e.is_completed)},actions:{async fetchTodos(o=1){var e;this.loading=!0,this.error=null;try{const t={page:o,ordering:this.filters.sort,search:this.filters.searchQuery||void 0};this.filters.section&&(t.section=this.filters.section),this.filters.tags.length>0&&(t.tags=this.filters.tags.join(",")),this.filters.completed!==null&&(t.is_completed=this.filters.completed);const r=await s.getTodos(t);return this.todos=r.data.results,this.pagination={count:r.data.count,next:r.data.next,previous:r.data.previous},r.data}catch(t){throw this.error=((e=t.response)==null?void 0:e.data)||{detail:"Failed to load todos"},t}finally{this.loading=!1}},async fetchTodoById(o){var e;this.loading=!0,this.error=null;try{const t=await s.getTodo(o);return this.currentTodo=t.data,t.data}catch(t){throw this.error=((e=t.response)==null?void 0:e.data)||{detail:"Failed to load todo"},t}finally{this.loading=!1}},async createTodo(o){var e;this.loading=!0,this.error=null;try{const t=await s.createTodo(o);return this.todos.unshift(t.data),t.data}catch(t){throw this.error=((e=t.response)==null?void 0:e.data)||{detail:"Failed to create todo"},t}finally{this.loading=!1}},async updateTodo(o,e){var t;this.loading=!0,this.error=null;try{const r=await s.updateTodo(o,e),i=this.todos.findIndex(a=>a.id===o);return i!==-1&&(this.todos[i]=r.data),this.currentTodo&&this.currentTodo.id===o&&(this.currentTodo=r.data),r.data}catch(r){throw this.error=((t=r.response)==null?void 0:t.data)||{detail:"Failed to update todo"},r}finally{this.loading=!1}},async deleteTodo(o){var e;this.loading=!0,this.error=null;try{await s.deleteTodo(o),this.todos=this.todos.filter(t=>t.id!==o),this.currentTodo&&this.currentTodo.id===o&&(this.currentTodo=null)}catch(t){throw this.error=((e=t.response)==null?void 0:e.data)||{detail:"Failed to delete todo"},t}finally{this.loading=!1}},async toggleTodoComplete(o){var t;const e=this.getTodoById(o);if(e)try{e.is_completed?await s.incompleteTodo(o):await s.completeTodo(o),e.is_completed=!e.is_completed,e.completed_at=e.is_completed?new Date().toISOString():null,this.currentTodo&&this.currentTodo.id===o&&(this.currentTodo.is_completed=e.is_completed,this.currentTodo.completed_at=e.completed_at)}catch(r){throw this.error=((t=r.response)==null?void 0:t.data)||{detail:"Failed to toggle todo completion"},r}},setFilters(o){this.filters={...this.filters,...o}},resetFilters(){this.filters={section:null,tags:[],searchQuery:"",completed:null,sort:"-created_at"}}}});export{c as u};
