import{J as l,K as n}from"./index-C4Um7Kjq.js";const d={getFlashcards(a={}){return l.get("flashcards/",{params:a})},getFlashcard(a){return l.get(`flashcards/${a}/`)},createFlashcard(a){return l.post("flashcards/",a)},updateFlashcard(a,s){return l.put(`flashcards/${a}/`,s)},getNextFlashcard(a){return l.get(`flashcards/${a}/next/`)},getPreviousFlashcard(a){return l.get(`flashcards/${a}/previous/`)},deleteFlashcard(a){return l.delete(`flashcards/${a}/`)}},c=n("flashcards",{state:()=>({flashcards:[],currentFlashcard:null,loading:!1,error:null,pagination:{count:0,next:null,previous:null},filters:{section:null,tags:[],searchQuery:"",sort:"-updated_at"}}),getters:{getFlashcardById:a=>s=>a.flashcards.find(r=>r.id===s),getNextFlashcardId:a=>s=>{const r=a.flashcards.findIndex(t=>t.id===s);return r===-1||r===a.flashcards.length-1?null:a.flashcards[r+1].id},getPreviousFlashcardId:a=>s=>{const r=a.flashcards.findIndex(t=>t.id===s);return r<=0?null:a.flashcards[r-1].id}},actions:{async fetchFlashcards(a=1,s={}){var r;this.loading=!0,this.error=null;try{const t={page:a,ordering:this.filters.sort,search:this.filters.searchQuery||void 0,...s};this.filters.section&&!t.section&&(t.section=this.filters.section),this.filters.tags.length>0&&!t.tag&&!t.tags&&(t.tags=this.filters.tags.join(",")),console.log("Fetching flashcards with params:",t);const e=await d.getFlashcards(t);return console.log("Flashcard response:",e.data),Array.isArray(e.data)?(this.flashcards=e.data,this.pagination={count:e.data.length,next:null,previous:null},{results:e.data,count:e.data.length}):e.data.results?(this.flashcards=e.data.results,this.pagination={count:e.data.count,next:e.data.next,previous:e.data.previous},e.data):(console.warn("Unexpected API response structure:",e.data),this.flashcards=[],this.pagination={count:0,next:null,previous:null},{results:[],count:0})}catch(t){throw console.error("Failed to load flashcards:",t),this.error=((r=t.response)==null?void 0:r.data)||{detail:"Failed to load flashcards"},t}finally{this.loading=!1}},async fetchFlashcardById(a){var s;this.loading=!0,this.error=null;try{const r=await d.getFlashcard(a);return this.currentFlashcard=r.data,r.data}catch(r){throw this.error=((s=r.response)==null?void 0:s.data)||{detail:"Failed to load flashcard"},r}finally{this.loading=!1}},async createFlashcard(a){var s;this.loading=!0,this.error=null;try{const r=await d.createFlashcard(a);return this.flashcards.unshift(r.data),r.data}catch(r){throw this.error=((s=r.response)==null?void 0:s.data)||{detail:"Failed to create flashcard"},r}finally{this.loading=!1}},async updateFlashcard(a,s){var r;this.loading=!0,this.error=null;try{const t=await d.updateFlashcard(a,s),e=this.flashcards.findIndex(i=>i.id===a);return e!==-1&&(this.flashcards[e]=t.data),this.currentFlashcard&&this.currentFlashcard.id===a&&(this.currentFlashcard=t.data),t.data}catch(t){throw this.error=((r=t.response)==null?void 0:r.data)||{detail:"Failed to update flashcard"},t}finally{this.loading=!1}},async deleteFlashcard(a){var s;this.loading=!0,this.error=null;try{await d.deleteFlashcard(a),this.flashcards=this.flashcards.filter(r=>r.id!==a),this.currentFlashcard&&this.currentFlashcard.id===a&&(this.currentFlashcard=null)}catch(r){throw this.error=((s=r.response)==null?void 0:s.data)||{detail:"Failed to delete flashcard"},r}finally{this.loading=!1}},setFilters(a){this.filters={...this.filters,...a}},resetFilters(){this.filters={section:null,tags:[],searchQuery:"",sort:"-updated_at"}}}});export{d as f,c as u};
